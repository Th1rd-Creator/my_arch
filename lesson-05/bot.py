
from aiogram.utils.markdown import text


from config import TOKEN
import keyboards as kb
import datetime


from aiogram import Bot, Dispatcher, types

from aiogram.utils import executor
import sqlite3
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)


###sqlite DB###

conn = sqlite3.connect(r'user.db')
cur = conn.cursor()


admin_id = 737108457
##



@dp.callback_query_handler(lambda c: c.data == 'button1')
async def process_callback_button1(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, '–ù–∞–∂–∞—Ç–∞ –ø–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞!')


@dp.callback_query_handler(lambda c: c.data and c.data.startswith('btn'))
async def process_callback_kb1btn1(callback_query: types.CallbackQuery):
    code = callback_query.data[-1]
    if code.isdigit():
        code = int(code)
    if code == 2:
        await bot.answer_callback_query(callback_query.id, text='–ù–∞–∂–∞—Ç–∞ –≤—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞')
    elif code == 5:
        await bot.answer_callback_query(
            callback_query.id,
            text='–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Å –Ω–æ–º–µ—Ä–æ–º 5.\n–ê —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–æ–π –¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤ üòâ',
            show_alert=True)
    else:
        await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, f'–ù–∞–∂–∞—Ç–∞ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞! code={code}')


##


@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç!", reply_markup=kb.greet_kb)



help_message = text(
    '–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω —Ç–µ–º –∂–µ —á–µ–ª–æ–≤–µ—Ä–æ–º —á—Ç–æ –∏ —Å–∏—Å—Ç–µ–º–∞ ultrone',
    '–ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –∑–Ω–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–≤–æ—Ä–µ—Ü ',
    '–Ω–æ —è –ø–æ–ø—ã—Ç–∞—é—Å—å –¥–æ–Ω–µ—Å—Ç–∏ –≤–∞–º –∏–¥–µ—é —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞',
    '—è –≤–¥–æ—Ö–Ω–æ–≤–∏–ª—Å—è –æ–¥–Ω–∏–º –±–æ—Ç–æ–º –Ω–æ –æ–Ω —Å–æ–∑–¥–∞–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø–æ–π',
    '–∞ —ç—Ç–æ –±–æ–ª—å—à–µ –¥–ª—è –ø–æ–æ—â–µ—Ä–µ–Ω–∏—è –∏  –¥–ª—è —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è',
    '–±–æ–ª—å—à–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –∏–≥—Ä—É'

)
'''"–≠—Ç–æ —É—Ä–æ–∫ –ø–æ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º.",
"–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n",
"/start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ",
"\n–®–∞–±–ª–æ–Ω—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä:",
"/hi1 - –∞–≤—Ç–æ —Ä–∞–∑–º–µ—Ä",
"/hi2 - —Å–∫—Ä—ã—Ç—å –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è",
"/hi3 - –±–æ–ª—å—à–µ –∫–Ω–æ–ø–æ–∫",
"/hi4 - –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥",
"/hi5 - –±–æ–ª—å—à–µ —Ä—è–¥–æ–≤",
"/hi6 - –∑–∞–ø—Ä–æ—Å –ª–æ–∫–∞—Ü–∏–∏ –∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
"/hi7 - –≤—Å–µ –º–µ—Ç–æ–¥—ã"
"/rm - —É–±—Ä–∞—Ç—å —à–∞–±–ª–æ–Ω—ã",
"\n–ò–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã:",
"/1 - –ø–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞",
"/2 - —Å—Ä–∞–∑—É –º–Ω–æ–≥–æ –∫–Ω–æ–ø–æ–∫",
sep = "\n"'''
@dp.message_handler(commands=['hess'])
async def process_help_command(message: types.Message):
    await message.reply(str(message).replace(',',',\n'))
@dp.message_handler(text=['–∫—Ç–æ –æ–Ω'])
async def process_help_command(message: types.Message):
    if message.chat.type == 'supergroup':
        if 'reply_to_message' in message:
            await message.answer('–≠—Ç–æ –ø–æ–ª—å–∑—ã–≤–∞—Ç–µ–ª—å {0}'.format(message.reply_to_message.from_user.username))
    else:
        await  message.answer('–≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ.')


@dp.message_handler(text=['+'])
async def process_help_command(message: types.Message):
    if message.chat.type == 'supergroup':
        if 'reply_to_message' in message:
            nus = int(cur.execute("SELECT `reput` FROM where_me WHERE user_id=(?);",(message.from_user.id,)).fetchone()[0]) +1
            print(nus)
            cur.execute("UPDATE where_me SET reput = ? WHERE user_id = ?",(nus,message.from_user.id))
            conn.commit()
            await message.answer('–†–µ–ø—É—Ç–∞—Ü–∏—è –ø–æ–≤—ã—à–µ–Ω–∞')
    else:
        await  message.answer('–≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ.')


@dp.message_handler(text=['–ø–æ–≤—ã—Å–∏—Ç—å'])
async def process_help_command(message: types.Message):
    if message.chat.type == 'supergroup':
        if 'reply_to_message' in message:

            nus = int(cur.execute("SELECT `per` FROM user_per WHERE user_id=(?);",(message.reply_to_message.from_user.id,)).fetchone()[0])
            nul = int(cur.execute("SELECT `per` FROM user_per WHERE user_id=(?);",(message.from_user.id,)).fetchone()[0])
            print(nus, nul)
            #if message.from_user.id == 737108457 or message.from_user.id ==
            if nul+10 < nus:
                if nus ==0 or nus == 3:
                    await message.answer('—Å–æ–∑–¥–∞—Ç–µ–ª—è –Ω–µ –≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–≤—ã—Å–∏—Ç—å')

                else:
                    cur.execute("UPDATE user_per SET per = ?   WHERE user_id = ?", (nus - 1, message.reply_to_message.from_user.id))
                    #print(cur.execute("UPDATE user_per SET per = ? WHERE user_id = ?", (nus - 1, message.from_user.id)))
                    conn.commit()
                    await message.answer(f'–†–µ–ø—É—Ç–∞—Ü–∏—è –ø–æ–≤—ã—à–µ–Ω–∞  —Ç–µ–ø–µ—Ä—å –æ–Ω–∞ {cur.execute("SELECT `per` FROM user_per WHERE user_id=(?);",(message.reply_to_message.from_user.id,)).fetchone()[0]}')
            else:
                await  message.answer('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–≤—ã—Å–∏—Ç—å –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑—ã–≤–∞—Ç–µ–ª—è \n –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –≤–∞—à–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—ã—à–µ –Ω–∞ 10 –µ–¥–µ–Ω–∏—Ü')
    else:
        await  message.answer('–≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ.')


@dp.message_handler(text=['–ø–æ–Ω–∏–∑–∏—Ç—å'])
async def process_help_command(message: types.Message):
    if message.chat.type == 'supergroup':
        if 'reply_to_message' in message:

            nus = int(cur.execute("SELECT `per` FROM user_per WHERE user_id=(?);",(message.reply_to_message.from_user.id,)).fetchone()[0])
            nul = int(cur.execute("SELECT `per` FROM user_per WHERE user_id=(?);",(message.from_user.id,)).fetchone()[0])
            print(nus, nul)
            #if message.from_user.id == 737108457 or message.from_user.id ==
            if nul+10 < nus:
                if nus ==0 or nus == 3:
                    await message.answer('—Å–æ–∑–¥–∞—Ç–µ–ª—è –Ω–µ –≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–≤—ã—Å–∏—Ç—å')

                else:
                    cur.execute("UPDATE user_per SET per = ? WHERE user_id = ?", (nus + 1, message.reply_to_message.from_user.id))
                    #print(cur.execute("UPDATE user_per SET per = ? WHERE user_id = ?", (nus - 1, message.from_user.id)))
                    conn.commit()
                    await message.answer(f'–†–µ–ø—É—Ç–∞—Ü–∏—è –ø–æ–Ω–∏–∂–µ–Ω–∞ —Ç–µ–ø–µ—Ä—å –æ–Ω–∞ {cur.execute("SELECT `per` FROM user_per WHERE user_id=(?);",(message.reply_to_message.from_user.id,)).fetchone()[0]}')
            else:
                await  message.answer('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–≤—ã—Å–∏—Ç—å –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑—ã–≤–∞—Ç–µ–ª—è \n –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –≤–∞—à–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤—ã—à–µ –Ω–∞ 10 –µ–¥–µ–Ω–∏—Ü')
    else:
        await  message.answer('–≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ.')


@dp.message_handler(commands=['help'])
async def process_help_command(message: types.Message):
    await message.reply(help_message)

@dp.message_handler(commands=['–∫—Ç–æ —è'])
async def process_help_command(message: types.Message):
    await message.reply(message.chat.type)

@dp.message_handler(content_types=["new_chat_members"])
async def handler_new_member(message: types.Message):
    #user_name = message.new_chat_member.first_name
    fos = cur.execute("SELECT user_id FROM user_per;").fetchall()
    now = datetime.datetime.now()
    if message.from_user.id not in fos:
        cur.execute("INSERT INTO user_per VALUES(?,?,?);", (message.from_user.id, 3072, 'NONE'))
        cur.execute("INSERT INTO where_me VALUES(?,?,?,?);", (message.from_user.id, f'{now.day}:{now.month}:{now.year}',0,0))
        conn.commit()
        await message.answer(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, @{message.from_user}")




@dp.message_handler(text=["–∫—Ç–æ —è"])
async def handler_new_member(message: types.Message):
    fos = cur.execute("SELECT user_id FROM user_per;").fetchall()
    per = cur.execute("SELECT per FROM user_per WHERE user_id=(?);",(message.from_user.id,)).fetchone()[0]
    if message.from_user.id not in fos:
        whee_me = (f'''üë§ –≠—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [{message.from_user.first_name}](https://t.me/{message.from_user.username})
–†–∞–Ω–≥ :{per}
–†–µ–ø—É—Ç–∞—Ü–∏—è: ‚ú®{cur.execute("SELECT reput FROM where_me WHERE user_id=(?);",(message.from_user.id,)).fetchone()[0]}|+{cur.execute("SELECT `add` FROM where_me WHERE user_id=(?);",(message.from_user.id,)).fetchone()[0]}
–ü–æ—è–≤–ª–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ: {cur.execute("SELECT one_mess FROM where_me WHERE user_id=(?);",(message.from_user.id,)).fetchone()[0]}

''')
        #await  message.answer('<a href="https://vk.com/id41732290">VK</a>',parse_mode="HTML", disable_web_page_preview=True)
        if cur.execute("SELECT one_mess FROM where_me WHERE user_id=(?);",(message.from_user.id,)).fetchone() == "NONE":
            await message.answer(whee_me, parse_mode='Markdown', disable_web_page_preview=True)
        else:
            await message.answer(whee_me+ f'–û —Å–µ–±–µ: \n  {cur.execute("SELECT names FROM user_per WHERE user_id=(?);",(message.from_user.id,)).fetchone()[0]}', parse_mode='Markdown', disable_web_page_preview=True)


#5121303843


@dp.message_handler(commands=["id"])
async def handler_new_member(message: types.Message):
    if 'reply_to_message' in message:
        await message.answer('`'+str(message.reply_to_message.from_user.id)+"`", parse_mode='Markdown')

    else:

        await message.answer('`'+str(message.from_user.id)+"`", parse_mode='Markdown')

    '''if message.chat.type == 'supergroup':
        if 'reply_to_message' in message:

            await message.answer(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, @{message}")'''

        # user_name = message.new_chat_member.first_name
    #bot.send_message(message.chat.id,)

@dp.message_handler()
async def process_help_command(message: types.Message):
    pass

    #await message.answer(message)
    '''if message.chat.type == 'supergroup':
        if 'reply_to_message' in message:
            if message.text == '–∫—Ç–æ –æ–Ω':
                await message.answer('–≠—Ç–æ –ø–æ–ª—å–∑—ã–≤–∞—Ç–µ–ª—å {0}'.format(message.text))
            #await message.answer(message.text)'''
            #await message.answer(str(message).replace(',',',\n'))#if message.reply_to_message():
        #await message.reply(str(message).replace(',',',\n'))'''
if __name__ == '__main__':
    executor.start_polling(dp)
'''
('\n'
 '\n'
 '{"message_id": 24, \n'
 '    "from": {"id": 1087968824, \n'
 '        "is_bot": true, \n'
 '        "first_name": "Group", \n'
 '        "username": "GroupAnonymousBot"}, \n'
 '    "sender_chat": {"id": -1001524536974, \n'
 '        "title": "house of ultron sys.", \n'
 '        "username": "HU_sys", \n'
 '        "type": "supergroup"}, \n'
 '    "chat": {"id": -1001524536974, \n'
 '        "title": "house of ultron sys.", \n'
 '        "username": "HU_sys", \n'
 '        "type": "supergroup"}, \n'
 '    "date": 1643820567, \n'
 '    "reply_to_message": {"message_id": 23, \n'
 '        "from": {"id": 1952138591, \n'
 '            "is_bot": false, \n'
 '            "first_name": "–û–ª–µ–∫—Å—ñ", \n'
 '            "last_name": "–ô", \n'
 '            "username": "pokolpo"}, \n'
 '        "chat": {"id": -1001524536974, \n'
 '            "title": "house of ultron sys.", \n'
 '            "username": "HU_sys", \n'
 '            "type": "supergroup"}, \n'
 '    "date": 1643820561, \n'
 '    "text": "–ê–≥–∞"}, \n'
 '"text": "–∫—Ç–æ –æ–Ω"\n'
 '\n'
 '}\n'
 '\n'
 '\n'
 '\n')
 
 
 ////////////////////////////////////////////////
 
@dp.message_handler(commands=['hi1'])
async def process_hi1_command(message: types.Message):
    await message.reply("–ü–µ—Ä–≤–æ–µ - –∏–∑–º–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã",
                        reply_markup=kb.greet_kb1)


@dp.message_handler(commands=['hi2'])
async def process_hi2_command(message: types.Message):
    await message.reply("–í—Ç–æ—Ä–æ–µ - –ø—Ä—è—á–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ –æ–¥–Ω–æ–≥–æ –Ω–∞–∂–∞—Ç–∏—è",
                        reply_markup=kb.greet_kb2)


@dp.message_handler(commands=['hi3'])
async def process_hi3_command(message: types.Message):
    await message.reply("–¢—Ä–µ—Ç—å–µ - –¥–æ–±–∞–≤–ª—è–µ–º –±–æ–ª—å—à–µ –∫–Ω–æ–ø–æ–∫",
                        reply_markup=kb.markup3)


@dp.message_handler(commands=['hi4'])
async def process_hi4_command(message: types.Message):
    await message.reply("–ß–µ—Ç–≤–µ—Ä—Ç–æ–µ - —Ä–∞—Å—Å—Ç–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥",
                        reply_markup=kb.markup4)


@dp.message_handler(commands=['hi5'])
async def process_hi5_command(message: types.Message):
    await message.reply("–ü—è—Ç–æ–µ - –¥–æ–±–∞–≤–ª—è–µ–º —Ä—è–¥—ã –∫–Ω–æ–ø–æ–∫",
                        reply_markup=kb.markup5)


@dp.message_handler(commands=['hi6'])
async def process_hi6_command(message: types.Message):
    await message.reply("–®–µ—Å—Ç–æ–µ - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é\n"
                        "–≠—Ç–∏ –¥–≤–µ –∫–Ω–æ–ø–∫–∏ –Ω–µ –∑–∞–≤–∏—Å—è—Ç –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞",
                        reply_markup=kb.markup_request)


@dp.message_handler(commands=['hi7'])
async def process_hi7_command(message: types.Message):
    await message.reply("–°–µ–¥—å–º–æ–µ - –≤—Å–µ –º–µ—Ç–æ–¥—ã –≤–º–µ—Å—Ç–µ",
                        reply_markup=kb.markup_big)


@dp.message_handler(commands=['rm'])
async def process_rm_command(message: types.Message):
    await message.reply("–£–±–∏—Ä–∞–µ–º —à–∞–±–ª–æ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π",
                        reply_markup=kb.ReplyKeyboardRemove())

##


@dp.message_handler(commands=['1'])
async def process_command_1(message: types.Message):
    await message.reply("–ü–µ—Ä–≤–∞—è –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞",
                        reply_markup=kb.inline_kb1)


@dp.message_handler(commands=['2'])
async def process_command_2(message: types.Message):
    await message.reply("–û—Ç–ø—Ä–∞–≤–ª—è—é –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–Ω–æ–ø–∫–∏",
                        reply_markup=kb.inline_kb_full)
 
 
 
 
 
 '''